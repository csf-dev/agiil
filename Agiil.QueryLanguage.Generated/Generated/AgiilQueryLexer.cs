//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/craig/Projects/Agiil/Agiil.QueryLanguage.Antlr/Tools/../AgiilQuery.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Agiil.QueryLanguage.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class AgiilQueryLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		OPENPAREN=1, CLOSEPAREN=2, EQUALS=3, NOTEQUALS=4, TILDE=5, COMMA=6, WHITESPACE=7, 
		NOT=8, AND=9, OR=10, NAME=11, WORD=12, DIGITS=13, QUOTEDVALUE=14, ANY=15;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"A", "D", "E", "H", "I", "K", "L", "N", "O", "R", "S", "T", "UPPERCASE", 
		"LOWERCASE", "DIGIT", "OPENPAREN", "CLOSEPAREN", "EQUALS", "NOTEQUALS", 
		"TILDE", "COMMA", "WHITESPACE", "NOT", "AND", "OR", "NAME", "WORD", "DIGITS", 
		"QUOTEDVALUE", "ANY"
	};


	public AgiilQueryLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AgiilQueryLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'='", "'!='", "'~'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPENPAREN", "CLOSEPAREN", "EQUALS", "NOTEQUALS", "TILDE", "COMMA", 
		"WHITESPACE", "NOT", "AND", "OR", "NAME", "WORD", "DIGITS", "QUOTEDVALUE", 
		"ANY"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AgiilQuery.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static AgiilQueryLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x11', '\xA3', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', 
		'\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', 
		'\x5', '\x17', 'o', '\n', '\x17', '\x3', '\x17', '\x3', '\x17', '\x3', 
		'\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x5', '\x1B', '\x81', 
		'\n', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', 
		'\x6', '\x1B', '\x87', '\n', '\x1B', '\r', '\x1B', '\xE', '\x1B', '\x88', 
		'\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x6', '\x1C', '\x8E', '\n', 
		'\x1C', '\r', '\x1C', '\xE', '\x1C', '\x8F', '\x3', '\x1D', '\x6', '\x1D', 
		'\x93', '\n', '\x1D', '\r', '\x1D', '\xE', '\x1D', '\x94', '\x3', '\x1E', 
		'\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\a', '\x1E', '\x9B', '\n', 
		'\x1E', '\f', '\x1E', '\xE', '\x1E', '\x9E', '\v', '\x1E', '\x3', '\x1E', 
		'\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x2', '\x2', ' ', '\x3', 
		'\x2', '\x5', '\x2', '\a', '\x2', '\t', '\x2', '\v', '\x2', '\r', '\x2', 
		'\xF', '\x2', '\x11', '\x2', '\x13', '\x2', '\x15', '\x2', '\x17', '\x2', 
		'\x19', '\x2', '\x1B', '\x2', '\x1D', '\x2', '\x1F', '\x2', '!', '\x3', 
		'#', '\x4', '%', '\x5', '\'', '\x6', ')', '\a', '+', '\b', '-', '\t', 
		'/', '\n', '\x31', '\v', '\x33', '\f', '\x35', '\r', '\x37', '\xE', '\x39', 
		'\xF', ';', '\x10', '=', '\x11', '\x3', '\x2', '\x13', '\x4', '\x2', '\x43', 
		'\x43', '\x63', '\x63', '\x4', '\x2', '\x46', '\x46', '\x66', '\x66', 
		'\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 'J', 'J', 'j', 'j', '\x4', 
		'\x2', 'K', 'K', 'k', 'k', '\x4', '\x2', 'M', 'M', 'm', 'm', '\x4', '\x2', 
		'N', 'N', 'n', 'n', '\x4', '\x2', 'P', 'P', 'p', 'p', '\x4', '\x2', 'Q', 
		'Q', 'q', 'q', '\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', 'U', 'U', 
		'u', 'u', '\x4', '\x2', 'V', 'V', 'v', 'v', '\x3', '\x2', '\x43', '\\', 
		'\x3', '\x2', '\x63', '|', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\v', 
		'\v', '\"', '\"', '\x4', '\x2', '$', '$', '^', '^', '\x2', '\xA1', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', 
		'\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', '=', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '?', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\x41', '\x3', '\x2', '\x2', '\x2', '\a', '\x43', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\x45', '\x3', '\x2', '\x2', '\x2', '\v', 'G', '\x3', '\x2', 
		'\x2', '\x2', '\r', 'I', '\x3', '\x2', '\x2', '\x2', '\xF', 'K', '\x3', 
		'\x2', '\x2', '\x2', '\x11', 'M', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x15', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'\x17', 'S', '\x3', '\x2', '\x2', '\x2', '\x19', 'U', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', 'W', '\x3', '\x2', '\x2', '\x2', '\x1D', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', '[', '\x3', '\x2', '\x2', '\x2', '!', ']', '\x3', 
		'\x2', '\x2', '\x2', '#', '_', '\x3', '\x2', '\x2', '\x2', '%', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '\'', '\x63', '\x3', '\x2', '\x2', '\x2', 
		')', '\x66', '\x3', '\x2', '\x2', '\x2', '+', 'h', '\x3', '\x2', '\x2', 
		'\x2', '-', 'n', '\x3', '\x2', '\x2', '\x2', '/', 'r', '\x3', '\x2', '\x2', 
		'\x2', '\x31', 'v', '\x3', '\x2', '\x2', '\x2', '\x33', 'z', '\x3', '\x2', 
		'\x2', '\x2', '\x35', '\x80', '\x3', '\x2', '\x2', '\x2', '\x37', '\x8D', 
		'\x3', '\x2', '\x2', '\x2', '\x39', '\x92', '\x3', '\x2', '\x2', '\x2', 
		';', '\x96', '\x3', '\x2', '\x2', '\x2', '=', '\xA1', '\x3', '\x2', '\x2', 
		'\x2', '?', '@', '\t', '\x2', '\x2', '\x2', '@', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '\x41', '\x42', '\t', '\x3', '\x2', '\x2', '\x42', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\t', '\x4', '\x2', '\x2', 
		'\x44', '\b', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\t', '\x5', 
		'\x2', '\x2', '\x46', '\n', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\t', 
		'\x6', '\x2', '\x2', 'H', '\f', '\x3', '\x2', '\x2', '\x2', 'I', 'J', 
		'\t', '\a', '\x2', '\x2', 'J', '\xE', '\x3', '\x2', '\x2', '\x2', 'K', 
		'L', '\t', '\b', '\x2', '\x2', 'L', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'M', 'N', '\t', '\t', '\x2', '\x2', 'N', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'P', '\t', '\n', '\x2', '\x2', 'P', '\x14', '\x3', '\x2', 
		'\x2', '\x2', 'Q', 'R', '\t', '\v', '\x2', '\x2', 'R', '\x16', '\x3', 
		'\x2', '\x2', '\x2', 'S', 'T', '\t', '\f', '\x2', '\x2', 'T', '\x18', 
		'\x3', '\x2', '\x2', '\x2', 'U', 'V', '\t', '\r', '\x2', '\x2', 'V', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', 'W', 'X', '\t', '\xE', '\x2', '\x2', 'X', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\t', '\xF', '\x2', '\x2', 
		'Z', '\x1E', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\t', '\x10', '\x2', 
		'\x2', '\\', ' ', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', '*', '\x2', 
		'\x2', '^', '\"', '\x3', '\x2', '\x2', '\x2', '_', '`', '\a', '+', '\x2', 
		'\x2', '`', '$', '\x3', '\x2', '\x2', '\x2', '\x61', '\x62', '\a', '?', 
		'\x2', '\x2', '\x62', '&', '\x3', '\x2', '\x2', '\x2', '\x63', '\x64', 
		'\a', '#', '\x2', '\x2', '\x64', '\x65', '\a', '?', '\x2', '\x2', '\x65', 
		'(', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\a', '\x80', '\x2', '\x2', 
		'g', '*', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\a', '.', '\x2', '\x2', 
		'i', ',', '\x3', '\x2', '\x2', '\x2', 'j', 'o', '\t', '\x11', '\x2', '\x2', 
		'k', 'l', '\a', '\xF', '\x2', '\x2', 'l', 'o', '\a', '\f', '\x2', '\x2', 
		'm', 'o', '\a', '\f', '\x2', '\x2', 'n', 'j', '\x3', '\x2', '\x2', '\x2', 
		'n', 'k', '\x3', '\x2', '\x2', '\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\b', '\x17', '\x2', '\x2', 
		'q', '.', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\x5', '\x11', '\t', '\x2', 
		's', 't', '\x5', '\x13', '\n', '\x2', 't', 'u', '\x5', '\x19', '\r', '\x2', 
		'u', '\x30', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x5', '\x3', '\x2', 
		'\x2', 'w', 'x', '\x5', '\x11', '\t', '\x2', 'x', 'y', '\x5', '\x5', '\x3', 
		'\x2', 'y', '\x32', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x5', '\x13', 
		'\n', '\x2', '{', '|', '\x5', '\x15', '\v', '\x2', '|', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '}', '\x81', '\x5', '\x1B', '\xE', '\x2', '~', '\x81', 
		'\x5', '\x1D', '\xF', '\x2', '\x7F', '\x81', '\a', '\x61', '\x2', '\x2', 
		'\x80', '}', '\x3', '\x2', '\x2', '\x2', '\x80', '~', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x81', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\x82', '\x87', '\x5', '\x1B', '\xE', '\x2', '\x83', 
		'\x87', '\x5', '\x1D', '\xF', '\x2', '\x84', '\x87', '\a', '\x61', '\x2', 
		'\x2', '\x85', '\x87', '\x5', '\x1F', '\x10', '\x2', '\x86', '\x82', '\x3', 
		'\x2', '\x2', '\x2', '\x86', '\x83', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x84', '\x3', '\x2', '\x2', '\x2', '\x86', '\x85', '\x3', '\x2', '\x2', 
		'\x2', '\x87', '\x88', '\x3', '\x2', '\x2', '\x2', '\x88', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\x88', '\x89', '\x3', '\x2', '\x2', '\x2', '\x89', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8E', '\x5', '\x1B', '\xE', 
		'\x2', '\x8B', '\x8E', '\x5', '\x1D', '\xF', '\x2', '\x8C', '\x8E', '\a', 
		'\x61', '\x2', '\x2', '\x8D', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\x91', '\x93', '\x5', '\x1F', '\x10', 
		'\x2', '\x92', '\x91', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x95', '\x3', '\x2', '\x2', '\x2', '\x95', ':', '\x3', '\x2', '\x2', 
		'\x2', '\x96', '\x9C', '\a', '$', '\x2', '\x2', '\x97', '\x9B', '\n', 
		'\x12', '\x2', '\x2', '\x98', '\x99', '\a', '^', '\x2', '\x2', '\x99', 
		'\x9B', '\t', '\x12', '\x2', '\x2', '\x9A', '\x97', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x98', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x9E', '\x3', 
		'\x2', '\x2', '\x2', '\x9C', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9C', 
		'\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9F', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\a', 
		'$', '\x2', '\x2', '\xA0', '<', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA2', 
		'\v', '\x2', '\x2', '\x2', '\xA2', '>', '\x3', '\x2', '\x2', '\x2', '\f', 
		'\x2', 'n', '\x80', '\x86', '\x88', '\x8D', '\x8F', '\x94', '\x9A', '\x9C', 
		'\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Agiil.QueryLanguage.Generated
